/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface JsBackoffConfig {
  minMs: number
  maxMs: number
}
export interface JsKafkaConfig {
  brokers: Array<string>
  topic: string
  clientId: string
  groupId: string
  username: string
  password: string
  producerConfigOverrides: Record<string, string>
  consumerConfigOverrides: Record<string, string>
  producerSendTimeoutMs?: number
  logLevel?: string
}
export interface JsConfig {
  backoffOnConflict: JsBackoffConfig
  retryBackoff: JsBackoffConfig
  retryAttemptsMax: number
  retryOoBackoff: JsBackoffConfig
  retryOoAttemptsMax: number
  snapshotWaitTimeoutMs: number
  agent: string
  cohort: string
  bufferSize: number
  timeoutMs: number
  kafka: JsKafkaConfig
}
export interface JsCertificationRequest {
  candidate: JsCandidateData
  timeoutMs: number
}
export interface JsCandidateData {
  readset: Array<string>
  writeset: Array<string>
  statemap?: Array<Record<string, any>>
}
export interface OoRequest {
  xid: string
  safepoint: number
  newVersion: number
  attemptNr: number
}
export interface CapturedItemStateJs {
  id: string
  version: number
}
export interface CapturedStateJs {
  snapshotVersion: number
  items: Array<CapturedItemStateJs>
}
export class Initiator {
  static init(config: JsConfig): Promise<Initiator>
  certify(jsCertificationRequest: JsCertificationRequest, getStateCallback: () => Promise<any>, oooCallback: (err: Error | null, value: OoRequest) => any): Promise<string>
}
