[package]
name = "cohort_sdk"
version = "0.2.51-dev"
edition = "2021"

[dependencies]
async-trait = { workspace = true }
futures = { version = "0.3.28" }

# Tracing dependencies
#   We will move telemetry dependencies to the workspace once we adapt all projects. Currenly only SDK uses them.

#   For OTEL exporter over 'GRPC' protocol
axum =                      { version = "0.7" } # 0.7 is intentionally pinned
tonic =                     { version = "0.12.3" }

opentelemetry =             { version = "0.28.0", default-features = false, features = ["trace"]  }
opentelemetry_sdk =         { version = "0.28.0", default-features = false, features = ["trace", "rt-tokio"] }
opentelemetry-otlp =        { version = "0.28.0", features = [ "trace", "grpc-tonic" ] }
opentelemetry-prometheus =  { version = "0.28.0" }
opentelemetry-stdout =      { version = "0.28.0", features = [ "trace" ] }
tracing =                   { version = "0.1.41", features = [ "log" ] }
tracing-opentelemetry =     { version = "0.29.0" }
tracing-bunyan-formatter =  { version = "0.3.10" }
tracing-subscriber =        { version = "0.3.19", features = [ "fmt", "ansi", "json", "registry", "env-filter" ] }
# The end of tracing dependencies

thiserror = { version = "2.0.11" }

rand = { version = "0.9.0" }

rdkafka = { version = "0.37.0", features = ["sasl"]  }

serde = { workspace = true }
serde_json = { workspace = true }
strum = { version = "0.27.1", features = ["derive"] }
time = { version = "0.3.29" }
talos_metrics =             { path = "../talos_metrics", version = "0.2.51-dev" }
talos_agent =               { path = "../talos_agent", version = "0.2.51-dev" }
talos_certifier =           { path = "../talos_certifier", version = "0.2.51-dev" }
talos_common_utils =        { path = "../talos_common_utils", version = "0.2.51-dev" }
talos_cohort_replicator =   { path = "../talos_cohort_replicator", version = "0.2.51-dev" }
talos_rdkafka_utils =       { path = "../talos_rdkafka_utils", version = "0.2.51-dev" }

uuid =                      { version = "1.4.1", features = ["v4"] }

tokio = { workspace = true, features = ["full"] }
