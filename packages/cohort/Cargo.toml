[package]
name = "cohort"
version = "0.0.1"
edition = "2021"

[dependencies]

async-trait =       { workspace = true }
env_logger =        { workspace = true }
log =               { workspace = true }
serde =             { workspace = true }
serde_json =        { workspace = true }
time =              { workspace = true }
tokio =             { workspace = true, features = ["full"] }

# Postgres
refinery =          { version = "0.8.7", features = ["tokio-postgres"] }
tokio-postgres =    { version = "0.7", features = [ "with-uuid-1", "with-serde_json-1" ] }
deadpool-postgres = { version = "0.10" }

# Kafka
rdkafka =           { version = "0.29.0", features = ["sasl"] }
rdkafka-sys =       { version = "4.3.0" }

csv =               { version = "1.2.1" }
futures =           { version = "0.3.28" }
multimap =          { version = "0.9.0" }
rand =              { version = "0.8.5" }
rust_decimal =      { version = "1.30.0", features = ["db-tokio-postgres", "serde-with-float"] }
strum =             { version = "0.24", features = ["derive"] }
thiserror =         { version = "1.0.31" }
uuid =              { version = "1.2.2", features = ["v4"] }

opentelemetry =         { version = "0.19.0", features = ["rt-tokio"] }
opentelemetry-otlp =    { version = "0.12.0", features = ["tonic"] }
tracing =               { version = "0.1.37", features = ["log-always"] }
tracing-flame =         { version= "0.2.0" }
tracing-subscriber =    { version = "0.3.17", features = ["env-filter"] }
tracing-opentelemetry = { version = "0.19.0" }

# local package dependecies
metrics =                    { path = "../metrics" }
talos_agent =                { path = "../talos_agent" }
talos_certifier_adapters =   { path = "../talos_certifier_adapters" }
talos_certifier =            { path = "../talos_certifier" }
talos_suffix =               { path = "../talos_suffix" }

[dev-dependencies]
mockall =       { version = "0.11.3" }
tokio-test =    { version = "0.4.2" }
