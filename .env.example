# WHEN DEVELOPING LOCALLY, WE NEED TO ACCESS THE HOST NETWORK FROM K8S (FOR POSTGRES/KAFKA/ELASTIC/ETC)
LOCAL_HOST_IP=$(ifconfig en0 | grep inet | grep -v inet6 | awk '{print $2}')

# RUST version
RUST_VERSION=stable

# KAFKA
# KAFKA_BROKERS="localhost:9093\,$LOCAL_HOST_IP:9094"
KAFKA_BROKERS="localhost:9093"
KAFKA_CLIENT_ID="talos-certifier-dev"
KAFKA_GROUP_ID="talos-certifier-dev"
KAFKA_TOPIC="dev.ksp.certification"
KAFKA_USERNAME=
KAFKA_PASSWORD=
KAFKA_CONSUMER_OVERRIDES.enable.auto.commit="false"

# POSTGRES
# NB: `node-postgres` AND `node-pg-migrate` USE THE SAME ENVIRONMENT VARIABLES AS `libpq` TO CONNECT TO A POSTGRESQL SERVER
# NODE_PG_FORCE_NATIVE=1
PG_HOST=$LOCAL_HOST_IP
PG_PORT=5432
PG_USER=admin
PG_PASSWORD=admin
PG_DATABASE=talos-certifier-dev
ADMIN_PG_USER=admin
ADMIN_PG_PASSWORD=admin
ADMIN_PG_DATABASE=postgres

# CONFIG
RUST_LOG="warn"
DB_MOCK=false
CERTIFIER_MOCK=false

# Cohort configs
AGENT_NAME="Sample Cohort"
COHORT_NAME="Sample Cohort"
AGENT_BUFFER_SIZE=10000000
# Timeout used by synchronous rdkafka publisher.
AGENT_KAFKA_PRODUCER_SEND_TIMEOUT_MS=10
AGENT_TIMEOUT_MS=20000
KAFKA_LOG_LEVEL=info

COHORT_PG_HOST=127.0.0.1
COHORT_PG_PORT=5432
COHORT_PG_USER=postgres
COHORT_PG_PASSWORD=admin
COHORT_PG_DATABASE=talos-sample-cohort-dev
COHORT_ADMIN_PG_DATABASE=postgres
COHORT_PG_POOL_SIZE=100

# Replicator and Statemap Installer Services
REPLICATOR_KAFKA_COMMIT_FREQ_MS=10000
REPLICATOR_ENABLE_STATS=true
REPLICATOR_CHANNEL_SIZE=100000

REPLICATOR_SUFFIX_CAPACITY=800000
REPLICATOR_SUFFIX_PRUNE_THRESHOLD=1

STATEMAP_QUEUE_ENABLE_STATS=true
STATEMAP_QUEUE_CLEANUP_FREQUENCY_MS=10000
STATEMAP_INSTALLER_THREAD_POOL=100

# For example banking cohort
BANK_REPLICATOR_KAFKA_GROUP_ID="talos-replicator-dev"
BANK_STATEMAP_INSTALLER_MAX_RETRY=5
BANK_STATEMAP_INSTALL_RETRY_WAIT_MS=2

# ### Talos Messenger Env variables (start) #############################
# Messenger environment variables
TALOS_MESSENGER_KAFKA_GROUP_ID="talos-messenger-dev"
TALOS_MESSENGER_ACTIONS_WHITELIST="publish:kafka"
# ### Talos Messenger Env variables (end) #############################

#
# ### Configs used for topic creation (start) #############################
# KAFKA_CREATE_TOPIC_PARTITIONS=1
# KAFKA_CREATE_TOPIC_REPLICATION_COUNT=3
KAFKA_CREATE_TOPIC_CONFIGS="retention.ms=3600000, message.timestamp.type=LogAppendTime"
# ### Configs used for topic creation (end) #############################