# WHEN DEVELOPING LOCALLY, WE NEED TO ACCESS THE HOST NETWORK FROM K8S (FOR POSTGRES/KAFKA/ELASTIC/ETC)
LOCAL_HOST_IP=$(ifconfig en0 | grep inet | grep -v inet6 | awk '{print $2}')

# RUST version
RUST_VERSION=stable

# KAFKA
# KAFKA_BROKERS="localhost:9093\,$LOCAL_HOST_IP:9094"
KAFKA_BROKERS="localhost:9093"
KAFKA_CLIENT_ID="talos-certifier-dev"
KAFKA_GROUP_ID="talos-certifier-dev"
KAFKA_TOPIC="dev.ksp.certification"
KAFKA_USERNAME=
KAFKA_PASSWORD=

# POSTGRES
# NB: `node-postgres` AND `node-pg-migrate` USE THE SAME ENVIRONMENT VARIABLES AS `libpq` TO CONNECT TO A POSTGRESQL SERVER
# NODE_PG_FORCE_NATIVE=1
PG_HOST=$LOCAL_HOST_IP
PG_PORT=5432
PG_USER=admin
PG_PASSWORD=admin
PG_DATABASE=talos_certifier
ADMIN_PG_USER=admin
ADMIN_PG_PASSWORD=admin
ADMIN_PG_DATABASE=postgres

# Mock

DB_MOCK=false
CERTIFIER_MOCK=false

# CONFIG
RUST_LOG=debug

# Cohort configs
AGENT_NAME="Sample Cohort"
COHORT_NAME="Sample Cohort"
COHORT_WORKLOAD_DURATION=30

AGENT_BUFFER_SIZE=10000
AGENT_TIMEOUT_MS=5000

KAFKA_FETCH_WAIT_MAX_MS=6000
KAFKA_MESSAGE_TIMEOUT_MS=15000
KAFKA_ENQUEUE_TIMEOUT_MS=10
KAFKA_LOG_LEVEL=info

COHORT_PG_HOST=127.0.0.1
COHORT_PG_PORT=5432
COHORT_PG_USER=postgres
COHORT_PG_PASSWORD=admin
COHORT_PG_DATABASE=talos-sample-cohort-dev
COHORT_PG_POOL_SIZE=10

# Replicator and Statemap Installer Services
REPLICATOR_COMMIT_FREQ_MS=10000
REPLICATOR_ENABLE_STATS=false

REPLICATOR_SUFFIX_CAPACITY=100000
REPLICATOR_SUFFIX_PRUNE_THRESHOLD=1000
# REPLICATOR_SUFFIX_PRUNE_THRESHOLD=100

STATEMAP_QUEUE_ENABLE_STATS=false
STATEMAP_QUEUE_CLEANUP_FREQUENCY_MS=10000
STATEMAP_INSTALLER_THREAD_POOL=50


# For example banking cohort
BANK_STATEMAP_INSTALLER_MAX_RETRY=5
BANK_STATEMAP_INSTALL_RETRY_WAIT_MS=2
